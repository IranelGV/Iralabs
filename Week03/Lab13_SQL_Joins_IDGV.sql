# WEEK 3: 13/06/23
# Lab SQL Joins



USE sakila;

SELECT amount, return_date
from PAYMENT JOIN RENTAL
ON rental.rental_id = payment.rental_id;
#rental id is the common column

#Lab N. 13
#Challenge -Join on multiple  tables

#1. List the number of films per category.

SELECT category.name, count(film_category.film_id)
FROM  film_category 
JOIN category
on film_category.category_id = category.category_id 
group by category.name;

#2 Retrieve the store ID, city, and country for each store.

SELECT store_id, city, country
FROM country join city on country.country_id = city.country_id
join address on city.city_id = address.city_id
join store on address.address_id = store.address_id;

# N.3 Calculate the total revenue generated by each store in dollars.

SELECT store.store_id, SUM(payment.amount)
FROM payment join staff on payment.staff_id = staff.staff_id
join store on staff.store_id = store.store_id group by store.store_id;
    
	
#4. Determine the average running time of films for each category.

SELECT category.name , avg(film.length)
from category join film_category on film_category.category_id = category.category_id
join film on film.film_id = film_category.film_id group by category.name;


#5 Identify the film categories with the longest average running time.

#SELECT film_categories.film_id, AVG(film.length)
#from film_category join film on film.film_id = film_category.film_id;

SELECT AVG(LENGTH), name
FROM FILM 
JOIN film_category 
on film.film_id = film_category.film_id 
join category 
on film_category.category_id = category.category_id
group by name
order by AVG(LENGTH) desc;

#6 Display the top 10 most frequently rented movies in descending order.
SELECT title
FROM FILM
JOIN rental on rental.inventory_id = inventory.inventory_id
JOIN inventory on inventory.inventory_id= film.inventory_id
GROUP BY film.film_id, film.title
ORDER BY count(inventory.film_id) DESC
LIMIT 10;

select film.rating from film;


SELECT film.film_id, film.title
FROM film
JOIN inventory USING (film_id)
JOIN rental USING (inventory_id)
GROUP BY film.film_id, film.title
ORDER BY rental_count DESC
LIMIT 10;


SELECT title
FROM film AS f
JOIN inventory AS inv
ON f.film_id = inv.film_id
JOIN rental as r
ON inv.inventory_id = r.inventory_id
GROUP BY inv.film_id
ORDER BY count(inv.film_id) DESC
LIMIT 10;

#7. Determine if "Academy Dinosaur" can be rented from Store 1.
